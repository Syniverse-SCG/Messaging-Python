from scgapi.Scg import Scg
import scgapi.MessageRequest
import argparse


def check_state(api, config, mrq):

    # Construct an instance of the authentication object
    # with authentication data from a json file (auth.json)
    auth = scgapi.AuthInfo(config=config)

    # Prepare a session to the server.
    scg = Scg()

    # Prepare a session to the server.
    session = scg.connect(auth, api)

    # Get a MessageRequest resource
    res = scgapi.MessageRequest.Resource(session)

    # Get the message request instance
    message_request = res.get(mrq)

    print('Message Request {} is in state {} with {} delivered and {} failed messages'.format(
        message_request.id,
        message_request.state,
        message_request.delivered_count,
        message_request.failed_count))

    # Get a generator to the messages generated by this message request
    msgs = message_request.list_messages()

    # Print each message.
    #
    # Since the SDK use a generator and not a list, we will only have a small
    # number of messages in memory at any time, allowing us to iterate
    # over many messages if required, even on machines with very
    # limited internal memory.
    for msg in msgs:
        print(' - Message {} is in state {}, error code: {}, error reason: {}'.format(
            msg.id, msg.state, msg.failure_code, msg.failure_details))
        for frag in msg.fragments_info:
            print ('   - Fragment {} has state {}'.format(frag.fragment_id, frag.fragment_state))

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('mrq', help='Message-request to query')
    parser.add_argument('--api', help='URL to the API server', default=None)
    parser.add_argument('--auth', help='Location of json auth file', default='auth.json')
    args = parser.parse_args()
    check_state(api=args.api, config=args.auth, mrq=args.mrq)
